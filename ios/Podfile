require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'
install! 'cocoapods', :deterministic_uuids => false
target 'Newauth' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

#    added new code
    permissions_path = '../node_modules/react-native-permissions/ios'
    pod 'Permission-Contacts', :path => "#{permissions_path}/Contacts"
    pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
    pod 'RNSha256', :path => '../node_modules/react-native-sha256'
    pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
    
#   till here
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )


  pod 'react-native-contacts', :path => '../node_modules/react-native-contacts'

  pod 'react-native-image-picker', :path => '../node_modules/react-native-image-picker'

  pod 'react-native-document-picker', :path => '../node_modules/react-native-document-picker'

  pod 'react-native-image-editor', :path => '../node_modules/@react-native-community/image-editor'

  pod 'react-native-cookies', :path => '../node_modules/react-native-cookies/ios'

  pod 'RNFS', :path => '../node_modules/react-native-fs'

  pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'

  pod 'react-native-sms', :path => '../node_modules/react-native-sms'

  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

  pod 'RNCClipboard', :path => '../node_modules/@react-native-community/clipboard'

  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'

  pod 'react-native-splash-screen', :path => '../node_modules/react-native-splash-screen'

  pod 'react-native-video', :path => '../node_modules/react-native-video'

  pod 'RNFileViewer', :path => '../node_modules/react-native-file-viewer'
  

  
  pod 'react-native-webrtc', :path => '../node_modules/react-native-webrtc'

  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-async-storage/async-storage'
  
 

  pod 'RNCCheckbox', :path => '../node_modules/@react-native-community/checkbox'
  
  pod 'RNNotifee', :path => '../node_modules/@notifee/react-native'

  pod 'React-RCTPushNotification', :path => '../node_modules/react-native/Libraries/PushNotificationIOS'
  # pod 'React-RCTPushNotificationManager', :path => '../node_modules/react-native/Libraries/PushNotificationManager'
  # pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'

  target 'NewauthTests' do
    inherit! :complete
    # Pods for testing
  end
  
  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # :flipper_configuration => FlipperConfiguration.enabled(["Debug"]),  use_flipper!()

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config| 
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      end
    end
  end
  
#   post_install do |installer|
#   installer.pods_project.targets.each do |target|
#     if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
#       target.build_configurations.each do |config|
#           config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
#       end
#     end
#   end
# end

end
